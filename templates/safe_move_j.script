global move_done = False
global force_detected = False
global inverse_kinematics_failed = False

def script():
  set_tcp({{ tcp_in_faceplate }})

  {%- if use_payload %}
  set_target_payload({{ payload }})
  {%- endif %}

  move_done = False
  force_detected = False
  inverse_kinematics_failed = False

  thread move_thread():
    {% if use_joint_positions -%}
      socket_send_line("movej without inverse kinematics starting.", "ur_driver_socket")
      movej({{ joint_positions }}, a={{ accelleration }}, v={{ velocity }}
      {%- if use_execution_time -%}
      , t={{ execution_time }}
      {%- endif -%}
      {%- if use_blend_radius -%}
      , r={{ blend_radius }}
      {%- endif -%})
      move_done = True
    {% else -%}
      if get_inverse_kin_has_solution({{ target_in_base }}
      {%- if use_preferred_joint_config -%}
      , qnear={{ preferred_joint_config }}
      {%- endif -%}):
        socket_send_line("Solution found, start movej.", "ur_driver_socket")
        movej(get_inverse_kin({{ target_in_base }}
          {%- if use_preferred_joint_config -%}
          , qnear={{ preferred_joint_config }}
          {%- endif -%})
        , a={{ accelleration }}, v={{ velocity }}
        {%- if use_execution_time -%}
        , t={{ execution_time }}
        {%- endif -%}
        {%- if use_blend_radius -%}
        , r={{ blend_radius }}
        {%- endif -%})
        move_done = True
      else:
        socket_send_line("No inverse kinematics solution found, aborting.", "ur_driver_socket")
        inverse_kinematics_failed = True
        move_done = False
      end
    {%- endif %}
  end


  thread force_monitor_thread():
    while not move_done:
    force = force()
      if force > {{ force_threshold }} or force < -{{ force_threshold }}:
        force_done = True
        break
      end
    sleep(0.002)
    end
  end

  t1 = run move_thread()
  t2 = run force_monitor_thread()

  while not move_done and not force_detected and not inverse_kinematics_failed:
    sleep(0.002)
  end

  kill t1
  kill t2
  stopj(5.0)
  sleep(0.5)
  
  return move_done
end
